/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ehealthpro.frames;

import ehealthpro.daoimpls.PaymentsDAOImpl;
import java.awt.Color;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Timestamp;
import java.util.logging.Level;
import java.util.logging.Logger;
import net.proteanit.sql.DbUtils;
import java.util.logging.Level;
import javax.swing.JOptionPane;
import org.eclipse.birt.core.framework.Platform;
import org.eclipse.birt.report.engine.api.EngineConfig;
import org.eclipse.birt.report.engine.api.EngineException;
import org.eclipse.birt.report.engine.api.IReportEngine;
import org.eclipse.birt.report.engine.api.IReportEngineFactory;
import org.eclipse.birt.report.engine.api.IReportRunnable;
import org.eclipse.birt.report.engine.api.IRunAndRenderTask;
import org.eclipse.birt.report.engine.api.PDFRenderOption;
import org.eclipse.core.internal.registry.RegistryProviderFactory;

/**
 *
 * @author sweng
 */
public class PatientChargesDetailFrame extends javax.swing.JFrame {

    /**
     * Creates new form PatientChargesDetailFram
     */
    PaymentsFrame paymentsFrame = null;
    Integer appointmentId = null;
    Timestamp currentDate = new Timestamp(System.currentTimeMillis());
    public PatientChargesDetailFrame() {
        initComponents();
    }

    public PatientChargesDetailFrame(PaymentsFrame paymentsFrame, Integer appointmentId) {
        initComponents();
        this.paymentsFrame = paymentsFrame;
        this.appointmentId = appointmentId;
        getAllRecordForPatient(appointmentId);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        operationTable = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        testTable = new javax.swing.JTable();
        jLabel13 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        roomDetailTable = new javax.swing.JTable();
        jLabel20 = new javax.swing.JLabel();
        backButton = new javax.swing.JButton();
        jLabel22 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        patientRecordTextArea = new javax.swing.JTextArea();
        generateButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setForeground(new java.awt.Color(0, 202, 255));
        jPanel1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                jPanel1MouseMoved(evt);
            }
        });
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Berlin Sans FB", 0, 48)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(153, 0, 0));
        jLabel1.setText("Patient Charges Record");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 0, 490, 60));

        operationTable.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        operationTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(operationTable);

        jPanel1.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 220, 690, 120));

        testTable.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        testTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(testTable);

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 370, 690, 110));

        jLabel13.setFont(new java.awt.Font("Century Gothic", 0, 24)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(153, 0, 0));
        jLabel13.setText("Test Records :");
        jPanel1.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 340, 200, 30));

        jLabel18.setFont(new java.awt.Font("Century Gothic", 0, 24)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(153, 0, 0));
        jLabel18.setText("Operation Details :");
        jPanel1.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 190, 230, 30));

        roomDetailTable.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        roomDetailTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane5.setViewportView(roomDetailTable);

        jPanel1.add(jScrollPane5, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 510, 690, 110));

        jLabel20.setFont(new java.awt.Font("Century Gothic", 0, 24)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(153, 0, 0));
        jLabel20.setText("Room Details :");
        jPanel1.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 480, 220, 30));

        backButton.setBackground(new java.awt.Color(153, 0, 0));
        backButton.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        backButton.setForeground(new java.awt.Color(255, 255, 255));
        backButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ehealthpro/images/back.png"))); // NOI18N
        backButton.setText("Back");
        backButton.setBorder(null);
        backButton.setContentAreaFilled(false);
        backButton.setOpaque(true);
        backButton.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                backButtonMouseMoved(evt);
            }
        });
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });
        jPanel1.add(backButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 80, 150, 40));

        jLabel22.setFont(new java.awt.Font("Century Gothic", 0, 24)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(153, 0, 0));
        jLabel22.setText("Patient Record :");
        jPanel1.add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 180, 200, 30));

        patientRecordTextArea.setColumns(20);
        patientRecordTextArea.setFont(new java.awt.Font("Monospaced", 1, 18)); // NOI18N
        patientRecordTextArea.setRows(5);
        jScrollPane1.setViewportView(patientRecordTextArea);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 210, 520, 480));

        generateButton.setBackground(new java.awt.Color(153, 0, 0));
        generateButton.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        generateButton.setForeground(new java.awt.Color(255, 255, 255));
        generateButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ehealthpro/images/print.png"))); // NOI18N
        generateButton.setText("Generate Report");
        generateButton.setBorder(null);
        generateButton.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                generateButtonMouseMoved(evt);
            }
        });
        generateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generateButtonActionPerformed(evt);
            }
        });
        jPanel1.add(generateButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(1000, 640, 240, 50));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1280, 710));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void backButtonMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backButtonMouseMoved
        backButton.setForeground(Color.red);
    }//GEN-LAST:event_backButtonMouseMoved

    private void jPanel1MouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MouseMoved
        backButton.setForeground(Color.WHITE);
        generateButton.setForeground(Color.BLACK);
    }//GEN-LAST:event_jPanel1MouseMoved

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        this.dispose();
        paymentsFrame.setVisible(true);
    }//GEN-LAST:event_backButtonActionPerformed

    private void generateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generateButtonActionPerformed
        executeReport(appointmentId);
    }//GEN-LAST:event_generateButtonActionPerformed

    private void generateButtonMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_generateButtonMouseMoved
        generateButton.setForeground(Color.WHITE);
    }//GEN-LAST:event_generateButtonMouseMoved

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PatientChargesDetailFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PatientChargesDetailFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PatientChargesDetailFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PatientChargesDetailFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PatientChargesDetailFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backButton;
    private javax.swing.JButton generateButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTable operationTable;
    private javax.swing.JTextArea patientRecordTextArea;
    private javax.swing.JTable roomDetailTable;
    private javax.swing.JTable testTable;
    // End of variables declaration//GEN-END:variables
    private void getAllRecordForPatient(Integer appointmentId) {
        try {
            PaymentsDAOImpl paymentsDAOImpl = new PaymentsDAOImpl();
            ResultSet operationRecord = paymentsDAOImpl.getPatientOperationRecordByAppointmentId(appointmentId);
            ResultSet testRecord = paymentsDAOImpl.getPatientTestByAppointmentId(appointmentId);
            ResultSet roomRecord = paymentsDAOImpl.getPatientRoomRecordByAppointmentId(appointmentId);
            ResultSet doctorFees = paymentsDAOImpl.getDoctorFeesByAppointmentId(appointmentId);
            while (doctorFees.next()) {
                patientRecordTextArea.append("Appointment ID :" + "\t" + doctorFees.getString("Appointment ID") + "\n\n");
                patientRecordTextArea.append("Appointment Date :" + "\t" + doctorFees.getTimestamp("Appointment Date").toString() + "\n\n");
                patientRecordTextArea.append("Patient Name :" + "\t\t" + doctorFees.getString("Patient Name") + "\n\n");
                patientRecordTextArea.append("Gender :" + "\t\t" + doctorFees.getString("Gender") + "\n\n");
                patientRecordTextArea.append("Contact :" + "\t\t" + doctorFees.getString("Contact") + "\n\n");
                patientRecordTextArea.append("Doctor Name :" + "\t\t" + doctorFees.getString("Doctor Name") + "\n\n");
                patientRecordTextArea.append("Fees Status :" + "\t\t" + doctorFees.getString("Fees Status"));
            }
            operationTable.setModel(DbUtils.resultSetToTableModel(operationRecord));
            testTable.setModel(DbUtils.resultSetToTableModel(testRecord));
            roomDetailTable.setModel(DbUtils.resultSetToTableModel(roomRecord));
        } catch (SQLException ex) {
            Logger.getLogger(PatientChargesDetailFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void executeReport(Integer appointmentId){
        try {
            IReportEngine engine = null;
            EngineConfig config = null;
            IReportEngineFactory factory = null;
            Object factoryObj = null;
            try {
                config = new EngineConfig();
                config.setBIRTHome("C:\\birt-runtime-4.6.0-20160607\\ReportEngine");
                config.setLogConfig("C:\\temp\\test", Level.FINEST);
                Platform.startup(config);
                factoryObj = Platform.createFactoryObject(IReportEngineFactory.EXTENSION_REPORT_ENGINE_FACTORY);
                factory = (IReportEngineFactory) factoryObj;
                engine = factory.createReportEngine(config);

                // Open the report design
                IReportRunnable design = null;
                String designPath = "C://Users//sweng//workspace//BIRTDemo//patientReport.rptdesign";
                design = engine.openReportDesign(designPath);
                IRunAndRenderTask task = engine.createRunAndRenderTask(design);
                task.setParameterValue("Top Count", (new Integer(5)));
                task.setParameterValue("appointment_id",appointmentId);
                task.validateParameters();
                PDFRenderOption PDF_OPTIONS = new PDFRenderOption();
                String reportName="report "+appointmentId+System.currentTimeMillis()+" .pdf";
                PDF_OPTIONS.setOutputFileName("C:\\Users\\sweng\\Desktop\\New folder\\"+reportName);
                PDF_OPTIONS.setOutputFormat("pdf");
                task.setRenderOption(PDF_OPTIONS);
                task.run();
                task.close();
                engine.destroy();
                JOptionPane.showMessageDialog(this, "Report has been gernerated.");
            } catch (final Exception ex) {
                ex.printStackTrace();
            } finally {
                Platform.shutdown();
                engine.destroy();
                RegistryProviderFactory.releaseDefault();
                engine = null;
            }
        }catch(Exception en)
        {
            en.printStackTrace();
        }
    }
}
