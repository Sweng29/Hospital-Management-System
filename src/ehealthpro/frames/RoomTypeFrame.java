/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ehealthpro.frames;

import com.sun.glass.events.KeyEvent;
import ehealthpro.daoimpls.RoomTypeDAOImpl;
import ehealthpro.daoimpls.UserPermissionDAOImpl;
import ehealthpro.models.PermissionModel;
import ehealthpro.models.RoomTypeModel;
import java.awt.Color;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Timestamp;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author sweng
 */
public class RoomTypeFrame extends javax.swing.JFrame {

    /**
     * Creates new form RoomTypeFrame
     */
    Integer roomTypeId;
    Timestamp currentDate = new Timestamp(System.currentTimeMillis());
    public RoomTypeFrame() {
        initComponents();
        fillRoomTypeTable();
        addButton.setVisible(false);
        updateButton.setVisible(false);
        deleteButton.setVisible(false);
        checkPermissions();
        resetAddButton();
        this.setTitle("Room Type || E-Health Pro");
        this.setResizable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel6 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        addButton = new javax.swing.JButton();
        updateButton = new javax.swing.JButton();
        clearFieldsButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        fieldsPanel = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        roomTypeTextfield = new javax.swing.JTextField();
        chargesTextfield = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        roomTypeTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        backButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel6.setBackground(new java.awt.Color(153, 0, 0));
        jPanel6.setToolTipText("");
        jPanel6.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                jPanel6MouseMoved(evt);
            }
        });
        jPanel6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel6MouseClicked(evt);
            }
        });
        jPanel6.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel3.setBackground(new java.awt.Color(102, 102, 255));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jPanel6.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 162, 290, -1));

        addButton.setBackground(new java.awt.Color(255, 255, 255));
        addButton.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        addButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ehealthpro/images/add.png"))); // NOI18N
        addButton.setText("Add Room");
        addButton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        addButton.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                addButtonMouseMoved(evt);
            }
        });
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });
        jPanel6.add(addButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 40, 210, -1));

        updateButton.setBackground(new java.awt.Color(255, 255, 255));
        updateButton.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        updateButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ehealthpro/images/update.png"))); // NOI18N
        updateButton.setText("Update Room");
        updateButton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        updateButton.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                updateButtonMouseMoved(evt);
            }
        });
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });
        jPanel6.add(updateButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 40, 220, -1));

        clearFieldsButton.setBackground(new java.awt.Color(255, 255, 255));
        clearFieldsButton.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        clearFieldsButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ehealthpro/images/clearFields.png"))); // NOI18N
        clearFieldsButton.setText("Clear All Fields");
        clearFieldsButton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        clearFieldsButton.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                clearFieldsButtonMouseMoved(evt);
            }
        });
        clearFieldsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearFieldsButtonActionPerformed(evt);
            }
        });
        jPanel6.add(clearFieldsButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(1000, 40, 250, -1));

        deleteButton.setBackground(new java.awt.Color(255, 255, 255));
        deleteButton.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        deleteButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ehealthpro/images/trash.png"))); // NOI18N
        deleteButton.setText("Delete Room");
        deleteButton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        deleteButton.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                deleteButtonMouseMoved(evt);
            }
        });
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });
        jPanel6.add(deleteButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 40, 230, -1));

        getContentPane().add(jPanel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 550, 1280, 130));

        fieldsPanel.setBackground(new java.awt.Color(255, 255, 255));
        fieldsPanel.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                fieldsPanelMouseMoved(evt);
            }
        });
        fieldsPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                fieldsPanelMouseClicked(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setForeground(new java.awt.Color(102, 153, 255));
        jPanel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel2MouseClicked(evt);
            }
        });
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel7.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(153, 0, 0));
        jLabel7.setText("Room Type :");
        jPanel2.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 13, 144, 35));

        roomTypeTextfield.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        roomTypeTextfield.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                roomTypeTextfieldMouseClicked(evt);
            }
        });
        roomTypeTextfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                roomTypeTextfieldActionPerformed(evt);
            }
        });
        roomTypeTextfield.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                roomTypeTextfieldKeyReleased(evt);
            }
        });
        jPanel2.add(roomTypeTextfield, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 10, 288, 35));

        chargesTextfield.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        chargesTextfield.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                chargesTextfieldMouseClicked(evt);
            }
        });
        chargesTextfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chargesTextfieldActionPerformed(evt);
            }
        });
        chargesTextfield.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                chargesTextfieldKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                chargesTextfieldKeyTyped(evt);
            }
        });
        jPanel2.add(chargesTextfield, new org.netbeans.lib.awtextra.AbsoluteConstraints(192, 94, 288, 35));

        jLabel8.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(153, 0, 0));
        jLabel8.setText("Charges :");
        jPanel2.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 103, 144, 30));

        jLabel16.setBackground(new java.awt.Color(204, 204, 204));
        jLabel16.setFont(new java.awt.Font("Berlin Sans FB", 0, 48)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(153, 0, 51));
        jLabel16.setText("Room Type");

        roomTypeTable.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        roomTypeTable.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        roomTypeTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        roomTypeTable.setGridColor(new java.awt.Color(0, 102, 255));
        roomTypeTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                roomTypeTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(roomTypeTable);

        jLabel1.setFont(new java.awt.Font("Century Gothic", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(153, 0, 0));
        jLabel1.setText("Room Type Record :");

        backButton.setBackground(new java.awt.Color(153, 0, 0));
        backButton.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        backButton.setForeground(new java.awt.Color(255, 255, 255));
        backButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ehealthpro/images/back.png"))); // NOI18N
        backButton.setText("Go Back");
        backButton.setBorder(null);
        backButton.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                backButtonMouseMoved(evt);
            }
        });
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout fieldsPanelLayout = new javax.swing.GroupLayout(fieldsPanel);
        fieldsPanel.setLayout(fieldsPanelLayout);
        fieldsPanelLayout.setHorizontalGroup(
            fieldsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(fieldsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(fieldsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(fieldsPanelLayout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1198, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 72, Short.MAX_VALUE))
                    .addGroup(fieldsPanelLayout.createSequentialGroup()
                        .addGroup(fieldsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addGroup(fieldsPanelLayout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(backButton, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(fieldsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(fieldsPanelLayout.createSequentialGroup()
                                        .addGap(381, 381, 381)
                                        .addComponent(jLabel16))
                                    .addGroup(fieldsPanelLayout.createSequentialGroup()
                                        .addGap(219, 219, 219)
                                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 532, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        fieldsPanelLayout.setVerticalGroup(
            fieldsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, fieldsPanelLayout.createSequentialGroup()
                .addGroup(fieldsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(fieldsPanelLayout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addComponent(backButton)
                        .addGap(144, 144, 144)
                        .addComponent(jLabel1))
                    .addGroup(fieldsPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel16)
                        .addGap(26, 26, 26)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(22, Short.MAX_VALUE))
        );

        getContentPane().add(fieldsPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 1, 1280, 550));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addButtonMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addButtonMouseMoved
        if (addButton.isEnabled()) {
            addButton.setForeground(Color.red);
        }
    }//GEN-LAST:event_addButtonMouseMoved

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        if (roomTypeTextfield.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Please fill room type field to add record.");
        } else if (chargesTextfield.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Please fill charges field to add record.");
        } else {
            String roomType = roomTypeTextfield.getText();
            Integer charges = Integer.parseInt(chargesTextfield.getText());
            RoomTypeModel roomTypeModel = new RoomTypeModel();
            roomTypeModel.setType(roomType);
            roomTypeModel.setCharges(charges);
            roomTypeModel.setCreatedBy(1);
            roomTypeModel.setModifiedBy(1);
            roomTypeModel.setCreatedDate(currentDate);
            roomTypeModel.setModifiedDate(currentDate);
            int result = new RoomTypeDAOImpl().addRoomType(roomTypeModel);
            if (result > 0) {
                JOptionPane.showMessageDialog(this, result + " record has been successfully added.");
                fillRoomTypeTable();
            } else {
                JOptionPane.showMessageDialog(this, result + " record could not be added,try again.");
            }
            clearAllFields();
            resetAddButton();
        }
    }//GEN-LAST:event_addButtonActionPerformed

    private void updateButtonMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updateButtonMouseMoved
        if (updateButton.isEnabled()) {
            updateButton.setForeground(Color.red);
        }
    }//GEN-LAST:event_updateButtonMouseMoved

    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed
        if (roomTypeTextfield.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Please fill room type field to update record.");
        } else if (chargesTextfield.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Please fill charges field to update record.");
        } else {
            String roomType = roomTypeTextfield.getText();
            Integer charges = Integer.parseInt(chargesTextfield.getText());
            RoomTypeModel roomTypeModel = new RoomTypeModel();
            roomTypeModel.setType(roomType);
            roomTypeModel.setCharges(charges);
            roomTypeModel.setModifiedBy(2);
            roomTypeModel.setRoomTypeId(roomTypeId);
            roomTypeModel.setModifiedDate(currentDate);
            int result = new RoomTypeDAOImpl().updateRoomType(roomTypeModel);
            if (result > 0) {
                JOptionPane.showMessageDialog(this, result + " record has been successfully updated.");
                fillRoomTypeTable();
            } else {
                JOptionPane.showMessageDialog(this, " record could not be updated,try again.");
            }
            clearAllFields();
            resetAddButton();
        }
    }//GEN-LAST:event_updateButtonActionPerformed

    private void backButtonMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backButtonMouseMoved
        backButton.setForeground(Color.red);
    }//GEN-LAST:event_backButtonMouseMoved

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        new MainMenuFrame().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_backButtonActionPerformed

    private void deleteButtonMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteButtonMouseMoved
        if (deleteButton.isEnabled()) {
            deleteButton.setForeground(Color.red);
        }
    }//GEN-LAST:event_deleteButtonMouseMoved

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
            RoomTypeModel roomTypeModel = new RoomTypeModel();
            roomTypeModel.setModifiedBy(2);
            roomTypeModel.setModifiedDate(currentDate);
            roomTypeModel.setRoomTypeId(roomTypeId);
            int result = new RoomTypeDAOImpl().deleteRoomTypeById(roomTypeModel);
            if (result > 0) {
                JOptionPane.showMessageDialog(this, result + " record has been successfully deleted.");
                fillRoomTypeTable();
            } else {
                JOptionPane.showMessageDialog(this, " record could not be deleted,try again.");
            }
            clearAllFields();
            resetAddButton();
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void clearFieldsButtonMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_clearFieldsButtonMouseMoved
        if (clearFieldsButton.isEnabled()) {
            clearFieldsButton.setForeground(Color.red);
        }
    }//GEN-LAST:event_clearFieldsButtonMouseMoved

    private void clearFieldsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearFieldsButtonActionPerformed
        clearAllFields();
    }//GEN-LAST:event_clearFieldsButtonActionPerformed

    private void jPanel6MouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel6MouseMoved
        addButton.setForeground(resetColor());
        deleteButton.setForeground(resetColor());
        updateButton.setForeground(resetColor());
        clearFieldsButton.setForeground(resetColor());
        backButton.setForeground(Color.WHITE);
    }//GEN-LAST:event_jPanel6MouseMoved

    private void jPanel6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel6MouseClicked
        clearAllFields();
    }//GEN-LAST:event_jPanel6MouseClicked

    private void roomTypeTextfieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_roomTypeTextfieldMouseClicked

    }//GEN-LAST:event_roomTypeTextfieldMouseClicked

    private void roomTypeTextfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_roomTypeTextfieldActionPerformed

    }//GEN-LAST:event_roomTypeTextfieldActionPerformed

    private void roomTypeTextfieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_roomTypeTextfieldKeyReleased
        if(roomTypeTextfield.getText().equals(""))
        {
            addButton.setEnabled(true);
            updateButton.setEnabled(false);
            deleteButton.setEnabled(false);
            clearFieldsButton.setEnabled(false);
            roomTypeTable.clearSelection();
        }
    }//GEN-LAST:event_roomTypeTextfieldKeyReleased

    private void jPanel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel2MouseClicked
        clearAllFields();
    }//GEN-LAST:event_jPanel2MouseClicked

    private void roomTypeTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_roomTypeTableMouseClicked
        roomTypeId = (Integer) roomTypeTable.getValueAt(roomTypeTable.getSelectedRow(), 0);
        RoomTypeDAOImpl roomTypeDAOImpl = new RoomTypeDAOImpl();
        RoomTypeModel roomTypeModel = roomTypeDAOImpl.getRoomTypeById(roomTypeId);
        roomTypeTextfield.setText(roomTypeModel.getType());
        chargesTextfield.setText(Integer.toString(roomTypeModel.getCharges()));
        setButtons();
    }//GEN-LAST:event_roomTypeTableMouseClicked

    private void fieldsPanelMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fieldsPanelMouseMoved
        addButton.setForeground(resetColor());
        deleteButton.setForeground(resetColor());
        updateButton.setForeground(resetColor());
        clearFieldsButton.setForeground(resetColor());
        backButton.setForeground(Color.WHITE);
    }//GEN-LAST:event_fieldsPanelMouseMoved

    private void fieldsPanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fieldsPanelMouseClicked
        clearAllFields();
    }//GEN-LAST:event_fieldsPanelMouseClicked

    private void chargesTextfieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_chargesTextfieldMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_chargesTextfieldMouseClicked

    private void chargesTextfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chargesTextfieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chargesTextfieldActionPerformed

    private void chargesTextfieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_chargesTextfieldKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_chargesTextfieldKeyReleased

    private void chargesTextfieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_chargesTextfieldKeyTyped
        char c = evt.getKeyChar();
        if(!(Character.isDigit(c) || (c==KeyEvent.VK_BACKSPACE) || (c==KeyEvent.VK_DELETE)))
        {
            evt.consume();
        } 
    }//GEN-LAST:event_chargesTextfieldKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RoomTypeFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RoomTypeFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RoomTypeFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RoomTypeFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RoomTypeFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JButton backButton;
    private javax.swing.JTextField chargesTextfield;
    private javax.swing.JButton clearFieldsButton;
    private javax.swing.JButton deleteButton;
    private javax.swing.JPanel fieldsPanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable roomTypeTable;
    private javax.swing.JTextField roomTypeTextfield;
    private javax.swing.JButton updateButton;
    // End of variables declaration//GEN-END:variables

    private void fillRoomTypeTable() {
        ResultSet resultSet = new RoomTypeDAOImpl().getAllRoomTypes();
        roomTypeTable.setModel(DbUtils.resultSetToTableModel(resultSet));
    }
        private void clearAllFields() {
        roomTypeTextfield.setText("");
        chargesTextfield.setText("");
        roomTypeTable.clearSelection();
        resetAddButton();
    }

    private Color resetColor() {
        return Color.BLACK;
    }

    public void setButtons() {
        addButton.setEnabled(false);
        updateButton.setEnabled(true);
        deleteButton.setEnabled(true);
    }

    private void resetAddButton() {
        addButton.setEnabled(true);
        updateButton.setEnabled(false);
        deleteButton.setEnabled(false);
    }
    
    private void checkPermissions() {
        ResultSet assignedPermissions = new UserPermissionDAOImpl().getAssignedPermissions(LoginFrame.userType); 
        try {
            while(assignedPermissions.next())
            {
                PermissionModel permissionModel = new PermissionModel();
                permissionModel.setPermission(assignedPermissions.getString("Permission"));
                
                if(permissionModel.getPermission().equals("ADD_ROOM_TYPE"))
                {
                    addButton.setVisible(true);
                }
                if(permissionModel.getPermission().equals("DELETE_ROOM_TYPE"))
                {
                    deleteButton.setVisible(true);
                }
                if(permissionModel.getPermission().equals("UPDATE_ROOM_TYPE"))
                {
                    updateButton.setVisible(true);
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(MainMenuFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}
